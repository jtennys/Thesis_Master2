//*****************************************************************************
//*****************************************************************************
//  FILENAME: TRANSMIT.h
//   Version: 3.3, Updated on 2009/7/10 at 10:46:51
//  Generated by PSoC Designer 5.0.985.0
//
//  DESCRIPTION: TX8 User Module C Language interface file for the
//               22/24/25/26/27xxx PSoC family of devices.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress MicroSystems 2000-2003. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

/* Create pragmas to support proper argument and return value passing */
#pragma fastcall16  TRANSMIT_SetTxIntMode
#pragma fastcall16  TRANSMIT_EnableInt
#pragma fastcall16  TRANSMIT_DisableInt
#pragma fastcall16  TRANSMIT_Start
#pragma fastcall16  TRANSMIT_Stop
#pragma fastcall16  TRANSMIT_SendData
#pragma fastcall16  TRANSMIT_bReadTxStatus

// High level TX functions
#pragma fastcall16  TRANSMIT_PutSHexByte
#pragma fastcall16  TRANSMIT_PutSHexInt
#pragma fastcall16  TRANSMIT_CPutString
#pragma fastcall16  TRANSMIT_PutString
#pragma fastcall16  TRANSMIT_PutChar
#pragma fastcall16  TRANSMIT_Write
#pragma fastcall16  TRANSMIT_CWrite
#pragma fastcall16  TRANSMIT_PutCRLF

//-------------------------------------------------
// Prototypes of the TRANSMIT API.
//-------------------------------------------------
extern void  TRANSMIT_SetTxIntMode(BYTE bTxIntMode);
extern void  TRANSMIT_EnableInt(void);
extern void  TRANSMIT_DisableInt(void);
extern void  TRANSMIT_Start(BYTE bParity);
extern void  TRANSMIT_Stop(void);
extern void  TRANSMIT_SendData(BYTE bTxData);
extern BYTE  TRANSMIT_bReadTxStatus(void);

// High level TX functions
extern void   TRANSMIT_CPutString(const char * szRomString);
extern void   TRANSMIT_PutString(char * szRamString);
extern void   TRANSMIT_PutChar(CHAR cData);
extern void   TRANSMIT_Write(char * szRamString, BYTE bCount);
extern void   TRANSMIT_CWrite(const char * szRomString, INT iCount);
extern void   TRANSMIT_PutSHexByte(BYTE bValue);
extern void   TRANSMIT_PutSHexInt(INT iValue);
extern void   TRANSMIT_PutCRLF(void);

// Old style function name, Do Not Use.
// Will be removfr in a future release
#pragma fastcall16 bTRANSMIT_ReadTxStatus
extern BYTE bTRANSMIT_ReadTxStatus(void);

//------------------------------------
//  Transmitter Parity masks
//------------------------------------
#define  TRANSMIT_PARITY_NONE         0x00
#define  TRANSMIT_PARITY_EVEN         0x02
#define  TRANSMIT_PARITY_ODD          0x06

//------------------------------------
//  Transmitter Status Register masks
//------------------------------------
#define  TRANSMIT_TX_COMPLETE         0x20
#define  TRANSMIT_TX_BUFFER_EMPTY     0x10

#define TRANSMIT_INT_MODE_TX_REG_EMPTY 0x00
#define TRANSMIT_INT_MODE_TX_COMPLETE  0x01

//------------------------------------
// Transmitter Interrupt masks
//------------------------------------
#define TRANSMIT_INT_REG_ADDR                  ( 0x0e1 )
#define TRANSMIT_bINT_MASK                     ( 0x04 )

// Old style defines, do not use.  These
// will be removed in a future release.
#define  TX8_PARITY_NONE         0x00
#define  TX8_PARITY_EVEN         0x02
#define  TX8_PARITY_ODD          0x06
#define  TX8_TX_COMPLETE         0x20
#define  TX8_TX_BUFFER_EMPTY     0x10



//-------------------------------------------------
// Register Addresses for TRANSMIT
//-------------------------------------------------
#pragma ioport  TRANSMIT_CONTROL_REG:   0x02b              // Control register
BYTE            TRANSMIT_CONTROL_REG;
#pragma ioport  TRANSMIT_TX_SHIFT_REG:  0x028              // TX Shift Register register
BYTE            TRANSMIT_TX_SHIFT_REG;
#pragma ioport  TRANSMIT_TX_BUFFER_REG: 0x029              // TX Buffer Register
BYTE            TRANSMIT_TX_BUFFER_REG;
#pragma ioport  TRANSMIT_FUNC_REG:  0x128                  // Function register
BYTE            TRANSMIT_FUNC_REG;
#pragma ioport  TRANSMIT_INPUT_REG: 0x129                  // Input register
BYTE            TRANSMIT_INPUT_REG;
#pragma ioport  TRANSMIT_OUTPUT_REG:    0x12a              // Output register
BYTE            TRANSMIT_OUTPUT_REG;

// end of file TRANSMIT.h
